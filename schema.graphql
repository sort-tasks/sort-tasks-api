### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AuthLoginInput {
  email: String!
  password: String!
}

type AuthLoginResult {
  token: String!
  user: User!
}

input AuthRegisterInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type Category {
  createdAt: DateTime!
  id: UUID
  name: String!
  updatedAt: DateTime!
}

input CategoryCreateInput {
  name: String!
}

type CategoryListResult {
  data: [Category]
  pagination: Pagination
}

type CategorySingleResult {
  data: Category
}

input CategoryUpdateInput {
  name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  authLogin(input: AuthLoginInput!): AuthLoginResult
  authRegister(input: AuthRegisterInput!): String
  categoryCreate(input: CategoryCreateInput!): Category!
  taskCreate(input: TaskCreateInput!): Task!
  taskDelete(id: UUID!): Task!
  taskUpdate(id: UUID!, input: TaskUpdateInput!): Task!
}

type Pagination {
  totalItems: Int
}

type Query {
  findManyCategory(skip: Int, take: Int): CategoryListResult!
  findManyTask(skip: Int, take: Int): TaskListResult!
  me: User
}

type Task {
  category: CategorySingleResult
  categoryId: UUID
  createdAt: DateTime!
  description: String
  id: UUID
  isCompleted: Boolean!
  name: String!
  updatedAt: DateTime!
}

input TaskCreateInput {
  categoryId: UUID!
  description: String
  isCompleted: Boolean
  name: String!
}

type TaskListResult {
  data: [Task]
  pagination: Pagination
}

input TaskUpdateInput {
  categoryId: UUID!
  description: String
  isCompleted: Boolean
  name: String!
}

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

type User {
  categories: CategoryListResult
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: UUID
  lastName: String!
  tasks: TaskListResult
  updatedAt: DateTime!
}